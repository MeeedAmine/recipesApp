{"version":3,"sources":["components/RecipesContext.js","components/CardRecipe.js","useFetch.js","components/RecipeList.js","components/SearchBar.js","pages/Recipes.js","components/Layout.js","App.js","index.js"],"names":["RecipesContext","createContext","RecipesProvider","props","useState","random","byName","searchParams","setSearchParams","Provider","value","children","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","CardRecipe","meal","classes","React","expanded","setExpanded","ingredients","data","i","push","parseData","Card","className","CardMedia","image","strMealThumb","title","strMeal","CardContent","Typography","variant","color","component","strCategory","strArea","CardActions","disableSpacing","IconButton","aria-label","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","strInstructions","map","ingredient","useFetch","url","setData","isPending","setIsPending","error","setError","useEffect","fetch","mode","then","res","ok","Error","json","catch","err","message","RecipeList","useContext","setUrl","meals","Container","CircularProgress","breakpointCols","default","1100","700","columnClassName","idMeal","margin","display","form","width","justifyContent","input","marginRight","search","SearchBar","setName","TextField","id","label","onChange","e","target","Button","preventDefault","Recipes","page","background","padding","spacing","drawer","drawerPaper","active","appbar","toolbar","mixins","date","flexGrow","Layout","history","useHistory","location","useLocation","menuItems","text","icon","path","Drawer","anchor","paper","List","item","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4ae3a2f.chunk.js","sourcesContent":["import React, {useState, createContext} from 'react'\r\n\r\nexport const RecipesContext = createContext();\r\n\r\nexport const RecipesProvider = props => {\r\n    const [searchParams, setSearchParams] = useState({\r\n        random: false,\r\n        byName: ''\r\n    });\r\n    return(\r\n        <RecipesContext.Provider value={[searchParams, setSearchParams]}>\r\n            {props.children}\r\n        </RecipesContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: \"auto\",\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n\r\nfunction parseData(data){\r\n  const ingredients = []\r\n  if(data){\r\n    for(let i=1; i<21; i++){\r\n      if(data[`strMeasure${i}`]){\r\n        ingredients.push(`${data[`strMeasure${i}`]} ${data[`strIngredient${i}`]}`)\r\n      }\r\n    }\r\n    return ingredients;\r\n  }\r\n}\r\nconst CardRecipe = ({meal}) => {\r\n    \r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const ingredients = parseData(meal)\r\n    const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n    };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={meal.strMealThumb}\r\n        title={meal.strMeal}\r\n      />\r\n      <CardContent>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Category : {meal.strCategory}\r\n        </Typography>\r\n        <Typography variant=\"h4\" color=\"textSecondary\" component=\"p\">\r\n          {meal.strMeal}\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\r\n          {meal.strArea}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography variant=\"h6\">Method:</Typography>\r\n          <Typography paragraph>\r\n            {meal.strInstructions}\r\n          </Typography>\r\n          <Typography variant=\"h6\">Ingredients:</Typography>\r\n          <Typography>\r\n            <ul>\r\n              {ingredients.map(ingredient => (<li>{ingredient}</li>))}\r\n            </ul>\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n     );\r\n}\r\n \r\nexport default CardRecipe;","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n            fetch(url, {mode: 'cors'})\r\n            .then(res => {\r\n                if(!res.ok){\r\n                    throw Error('Could not fetch the data for that resource!');\r\n                }\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setData(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                setError(err.message);\r\n                setIsPending(false);\r\n            });\r\n        \r\n    }, [url]);\r\n    return { data, setData, isPending, error };\r\n}\r\n\r\nexport default useFetch;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { RecipesContext } from './RecipesContext'\r\nimport { Container } from '@material-ui/core'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\r\nimport CardRecipe from './CardRecipe'\r\nimport Masonry from 'react-masonry-css'\r\nimport useFetch from '../useFetch'\r\n\r\nconst RecipeList = () => {\r\n    const [searchParams, setSearchParams] = useContext(RecipesContext);\r\n    const [url, setUrl] = useState(\"http://www.themealdb.com/api/json/v1/1/search.php?s=Arrabiata\");\r\n    const {data: meals, isPending, error} = useFetch(\"http://www.themealdb.com/api/json/v1/1/search.php?s=Arrabiata\");\r\n    const breakpoints = {\r\n        default:3,\r\n        1100: 2,\r\n        700: 1\r\n      }\r\n    useEffect(() => {\r\n          if(searchParams.random){\r\n            setUrl(\"http://www.themealdb.com/api/json/v1/1/random.php\")\r\n          }\r\n          if(searchParams.byName !== ''){\r\n            setUrl(`http://www.themealdb.com/api/json/v1/1/search.php?s=${searchParams.byName}`)\r\n          }\r\n      }, [searchParams]);\r\n    return ( \r\n        <Container>\r\n            { error && <div> {error} </div>}\r\n            { isPending && <CircularProgress />}\r\n            <Masonry\r\n            breakpointCols={breakpoints}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\">\r\n                    {meals &&  meals.meals.map(meal => (\r\n                        <div key={meal.idMeal}>\r\n                            <CardRecipe meal={meal} key={meal.idMeal} />\r\n                        </div>\r\n                    ))}\r\n            </Masonry>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default RecipeList;","import React, { useContext, useState } from 'react'\r\nimport { Button, Container, TextField } from \"@material-ui/core\";\r\nimport { makeStyles} from \"@material-ui/core\";\r\nimport { RecipesContext } from \"./RecipesContext\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: \"20px 0\",\r\n        display: \"flex\"\r\n    },\r\n    form:{\r\n        width:\"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    input: {\r\n        width: \"60%\",\r\n        marginRight:\"5px\"\r\n    },\r\n    search:{\r\n        marginRight:\"5px\"\r\n    }\r\n})\r\n\r\nconst SearchBar = () => {\r\n    const classes = useStyles();\r\n    const [searchParams, setSearchParams] = useContext(RecipesContext);\r\n    const [name, setName] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSearchParams({random: false, byNmae: name})\r\n    }\r\n    const handleRandom = (e) => {\r\n        e.preventDefault();\r\n        setSearchParams({random: true, byName: ''})\r\n    }\r\n\r\n    return ( \r\n        <Container className={classes.root}>\r\n            <form className={classes.form}>\r\n                <TextField \r\n                id=\"outlined-basic\" \r\n                label=\"Search by name\" \r\n                variant=\"outlined\" \r\n                onChange={e => setName(e.target.value)}\r\n                className={classes.input}/>\r\n                <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                className={classes.search}>\r\n                    Search\r\n                </Button>\r\n                <Button \r\n                variant=\"contained\" \r\n                color=\"secondary\"\r\n                onClick={handleRandom}>\r\n                    Surprise me!\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default SearchBar;","import RecipeList from \"../components/RecipeList\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport { RecipesProvider } from \"../components/RecipesContext\";\r\n\r\nconst Recipes = () => {\r\n    return (\r\n\r\n        <RecipesProvider>\r\n            <div>\r\n                <SearchBar />\r\n                <RecipeList />\r\n            </div>\r\n        </RecipesProvider> \r\n     );\r\n}\r\n \r\nexport default Recipes;","import { makeStyles, Drawer, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme) => {\r\n    return {\r\n        page:{\r\n            background: '#f9f9f9',\r\n            width: '100%',\r\n            padding: theme.spacing(3)\r\n        },\r\n        drawer:{\r\n            width: drawerWidth\r\n        },\r\n        drawerPaper:{\r\n            width: drawerWidth\r\n        },\r\n        root:{\r\n            display:'flex'\r\n        },\r\n        active:{\r\n            background: '#f4f4f4'\r\n        },\r\n        title: {\r\n            padding: theme.spacing(2)\r\n        },\r\n        appbar:{\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            background: '#ffff'\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        date:{\r\n            flexGrow: 1\r\n        },\r\n        avatar:{\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const menuItems = [\r\n        {\r\n            text: 'Recipes',\r\n            icon: <RestaurantIcon color=\"secondary\" />,\r\n            path: '/'\r\n        },\r\n        {\r\n            text: 'My Favourites',\r\n            icon: <FavoriteIcon color=\"secondary\" />,\r\n            path: '/create'\r\n        }\r\n    ]\r\n    return ( \r\n        <div className={classes.root}>\r\n            <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            anchor=\"left\"\r\n            classes={{ paper: classes.drawerPaper }}\r\n            >\r\n                <div>\r\n                    <Typography variant=\"h5\" className={classes.title}>\r\n                           Recipes\r\n                    </Typography>\r\n                </div>\r\n            {/* list/ links */}\r\n            <List>\r\n                {menuItems.map(item => (\r\n                    <ListItem\r\n                    button\r\n                    key={item.text}\r\n                    onClick={() => history.push(item.path)}\r\n                    className={location.pathname === item.path ? classes.active : null}\r\n                    >\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            </Drawer>\r\n            <div className={classes.page}>\r\n                <div className={classes.toolbar}>\r\n                </div>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Layout;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Recipes from './pages/Recipes'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createTheme } from '@material-ui/core/styles'\nimport { purple, grey } from '@material-ui/core/colors'\nimport Layout from './components/Layout'\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Quicksand',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <Router>\n        <Layout>\n          <Switch>\n          <Route exact path=\"/\">\n              <Recipes />\n          </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}